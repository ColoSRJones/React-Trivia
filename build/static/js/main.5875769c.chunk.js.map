{"version":3,"sources":["components/Progress.js","context/QuizContext.js","components/Question.js","reducers/types.js","components/Answer.js","components/Answers.js","reducers/QuizReducer.js","App.js","serviceWorker.js","index.js"],"names":["Progress","props","current","total","QuizContext","createContext","Question","state","useContext","currentQuestion","question","questions","SET_CURRENT_ANSWER","SET_CURRENT_QUESTION","SET_ERROR","SET_SHOW_RESULTS","SET_ANSWERS","RESET_QUIZ","Answer","classes","selected","push","value","letter","className","join","onClick","e","dispatch","type","currentAnswer","target","error","answer","Answers","answer_a","answer_b","answer_c","answer_d","quizReducer","action","showResults","answers","App","id","correct_answer","initialState","useReducer","map","find","questionId","key","renderResultMark","Provider","length","renderError","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5875769c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Progress(props) {\n    return (\n        <h2>\n            Question {props.current} of {props.total}\n        </h2>\n    );\n}\n\nexport default Progress;\n","import {createContext} from 'react';\n\nconst QuizContext = createContext();\n\nexport default QuizContext;\n","import React, {useContext} from 'react';\nimport QuizContext from '../context/QuizContext';\n\nfunction Question() {\n    const {state} = useContext(QuizContext);\n    const {currentQuestion, questions} = state;\n    const question = questions[currentQuestion];\n    return <h1>{question.question}</h1>;\n}\n\nexport default Question;\n","export const SET_CURRENT_ANSWER = 'SET_CURRENT_ANSWER';\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_SHOW_RESULTS = 'SET_SHOW_RESULTS';\nexport const SET_ANSWERS = 'SET_ANSWERS';\nexport const RESET_QUIZ = 'RESET_QUIZ';\n","import React from 'react';\nimport {SET_CURRENT_ANSWER, SET_ERROR} from '../reducers/types.js';\n\nfunction Answer(props) {\n    let classes = ['answer'];\n\n    const handleClick = e => {\n        props.dispatch({\n            type: SET_CURRENT_ANSWER,\n            currentAnswer: e.target.value,\n        });\n        props.dispatch({type: SET_ERROR, error: ''});\n    };\n\n    if (props.selected) {\n        classes.push('selected');\n    }\n    return (\n        <button\n            value={props.letter}\n            className={classes.join(' ')}\n            onClick={handleClick}>\n            <span className=\"letter\">{props.letter}.</span> {props.answer}\n        </button>\n    );\n}\n\nexport default Answer;\n","import React, {useContext} from 'react';\nimport Answer from './Answer';\nimport QuizContext from '../context/QuizContext';\n\nfunction Answers() {\n    const {state, dispatch} = useContext(QuizContext);\n    const {currentAnswer, currentQuestion, questions} = state;\n    const question = questions[currentQuestion];\n\n    return (\n        <>\n            <Answer\n                letter=\"a\"\n                answer={question.answer_a}\n                dispatch={dispatch}\n                selected={currentAnswer === 'a'}\n            />\n            <Answer\n                letter=\"b\"\n                answer={question.answer_b}\n                dispatch={dispatch}\n                selected={currentAnswer === 'b'}\n            />\n            <Answer\n                letter=\"c\"\n                answer={question.answer_c}\n                dispatch={dispatch}\n                selected={currentAnswer === 'c'}\n            />\n            <Answer\n                letter=\"d\"\n                answer={question.answer_d}\n                dispatch={dispatch}\n                selected={currentAnswer === 'd'}\n            />\n        </>\n    );\n}\n\nexport default Answers;\n","import {\n    SET_ANSWERS,\n    SET_CURRENT_QUESTION,\n    SET_CURRENT_ANSWER,\n    SET_ERROR,\n    SET_SHOW_RESULTS,\n    RESET_QUIZ,\n} from './types.js';\n\nfunction quizReducer(state, action) {\n    switch (action.type) {\n        case SET_CURRENT_ANSWER:\n            return {\n                ...state,\n                currentAnswer: action.currentAnswer,\n            };\n        case SET_CURRENT_QUESTION:\n            return {\n                ...state,\n                currentQuestion: action.currentQuestion,\n            };\n        case SET_ERROR:\n            return {\n                ...state,\n                error: action.error,\n            };\n        case SET_SHOW_RESULTS:\n            return {\n                ...state,\n                showResults: action.showResults,\n            };\n        case SET_ANSWERS:\n            return {\n                ...state,\n                answers: action.answers,\n            };\n        case RESET_QUIZ:\n            return {\n                ...state,\n                answers: [],\n                currentQuestion: 0,\n                currentAnswer: '',\n                showResults: false,\n                error: '',\n            };\n        default:\n            return state;\n    }\n}\n\nexport default quizReducer;\n","import React, {useReducer} from 'react';\nimport Progress from './components/Progress';\nimport Question from './components/Question';\nimport Answers from './components/Answers';\nimport QuizContext from './context/QuizContext';\n\nimport {\n    SET_ANSWERS,\n    SET_CURRENT_QUESTION,\n    SET_CURRENT_ANSWER,\n    SET_ERROR,\n    SET_SHOW_RESULTS,\n    RESET_QUIZ,\n} from './reducers/types.js';\nimport quizReducer from './reducers/QuizReducer';\n\nimport './App.css';\n\nfunction App() {\n    const questions = [\n        {\n            id: 1,\n            question: 'What team originally drafted John Elway?',\n            answer_a:\n                'Baltimore Colts',\n            answer_b: 'Chicago Bears',\n            answer_c:\n                'Denver Broncos',\n            answer_d: 'Boston Patriots',\n            correct_answer: 'a',\n        },\n        {\n          id: 2,\n          question: 'What team originally drafted John Elway?',\n          answer_a:\n              'Baltimore Colts',\n          answer_b: 'Chicago Bears',\n          answer_c:\n              'Denver Broncos',\n          answer_d: 'Boston Patriots',\n          correct_answer: 'a',\n        },\n        // {\n        //   id: 3,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 4,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 5,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 6,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 7,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 8,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 9,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 10,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 11,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 12,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 13,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 14,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 15,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 16,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 17,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 18,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 19,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n        // {\n        //   id: 20,\n        //   question: 'What team originally drafted John Elway?',\n        //   answer_a:\n        //       'Baltimore Colts',\n        //   answer_b: 'Chicago Bears',\n        //   answer_c:\n        //       'Denver Broncos',\n        //   answer_d: 'Boston Patriots',\n        //   correct_answer: 'a',\n        // },\n    ];\n\n    const initialState = {\n        questions,\n        currentQuestion: 0,\n        currentAnswer: '',\n        answers: [],\n        showResults: false,\n        error: '',\n    };\n\n    const [state, dispatch] = useReducer(quizReducer, initialState);\n    const {currentQuestion, currentAnswer, answers, showResults, error} = state;\n\n    const question = questions[currentQuestion];\n\n    const renderError = () => {\n        if (!error) {\n            return;\n        }\n\n        return <div className=\"error\">{error}</div>;\n    };\n\n    const renderResultMark = (question, answer) => {\n        if (question.correct_answer === answer.answer) {\n            return <span className=\"correct\">Correct</span>;\n        }\n\n        return <span className=\"failed\">Failed</span>;\n    };\n\n    const renderResultsData = () => {\n        return answers.map(answer => {\n            const question = questions.find(\n                question => question.id === answer.questionId\n            );\n\n            return (\n                <div key={question.id}>\n                    {question.question} - {renderResultMark(question, answer)}\n                </div>\n            );\n        });\n    };\n\n    const restart = () => {\n        dispatch({type: RESET_QUIZ});\n    };\n\n    const next = () => {\n        const answer = {questionId: question.id, answer: currentAnswer};\n\n        if (!currentAnswer) {\n            dispatch({type: SET_ERROR, error: 'Please select an option'});\n            return;\n        }\n\n        answers.push(answer);\n        dispatch({type: SET_ANSWERS, answers});\n        dispatch({type: SET_CURRENT_ANSWER, currentAnswer: ''});\n\n        if (currentQuestion + 1 < questions.length) {\n            dispatch({\n                type: SET_CURRENT_QUESTION,\n                currentQuestion: currentQuestion + 1,\n            });\n            return;\n        }\n\n        dispatch({type: SET_SHOW_RESULTS, showResults: true});\n    };\n\n    if (showResults) {\n        return (\n            <div className=\"container results\">\n                <h2>Results</h2>\n                <ul>{renderResultsData()}</ul>\n                <button className=\"btn btn-primary\" onClick={restart}>\n                    Restart\n                </button>\n            </div>\n        );\n    } else {\n        return (\n            <QuizContext.Provider value={{state, dispatch}}>\n              <div className=\"logo\">Broncos Country ASL Trivia</div>\n                <div className=\"container\">\n                    <Progress\n                        total={questions.length}\n                        current={currentQuestion + 1}\n                    />\n                    <Question />\n                    {renderError()}\n                    <Answers />\n                    <button className=\"btn btn-primary\" onClick={next}>\n                        Confirm and Continue\n                    </button>\n                </div>\n            </QuizContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}